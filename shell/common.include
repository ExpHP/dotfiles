# vim: ft=sh

# This file is intended to be sourced by both .bashrc and .zshrc.
# It contains environment variables, aliases, and other shell-agnostic things.

# FIXME I think there's actually a lot of bash-specific things in here.
#       kinda defeats the point >_>

source $HOME/dotfiles/shell/path.include

# for my lame-ass script that I gave up on
export VASP_POTCAR_DIR="$HOME/asd/VASP DATA/potentials"

# for pymatgen, written by people who actually know what they're doing
export VASP_PSP_DIR="$HOME/asd/pymatgen_res"

# this incredibly-descriptively named variable is for phonon
export ISODATA=/usr/local/phon610/isobyu/

export PYTHONSTARTUP="$HOME/dotfiles/python-startup.py"

#----------------------------------------------

callable() {
	# NOTE: 'GNU which', as found on arch linux, writes to stderr on failure.
	# I'm not sure how portable the alias check is, but this should only result
	#  in false negatives, which aren't a catastrophe.
	which -- "$@" 1>/dev/null 2>/dev/null || alias -- "$@" 1>/dev/null 2>/dev/null
}

# phonopy
alias sym-pos='phonopy --sym -c POSCAR > symmetry'
alias sym-con='phonopy --sym -c CONTCAR > symmetry'

# Let sudo see things in our path.
alias sudo='sudo env PATH="$PATH"'

# 'git commit' has trouble using pinentry-tty without this
export GPG_KEY=$(tty)

callable rg && alias h='history | rg'
callable rg || alias h='history | grep'

callable rlwrap && {
    callable python2 && alias python2='rlwrap python2'
    # this doesn't work, enable history in .gdbinit instead
    # FIXME or that seems to only have saved commands I
    #       wrote in the first run, and then never again...
    #callable gdb && alias gdb='rlwrap gdb'
}

# as if I'm ever going to use go again >_>
export GOPATH=$HOME/cpp/go

export COCONUT_STYLE=monokai

alias hoogle='hoogle --color --count=10'

# Aliasing cabal is not necessary and in fact causes subtle problems.
# You can set the sandbox option in ~/.cabal/config instead.
#alias cabal='cabal --require-sandbox'
alias cabal-deps='echo >&2 "No longer necessary. Try:  cabal new-build
Failing that, the old def was:
   cabal --require-sandbox install --dependencies-only -pj"; false'

# plz stop making me scroll through tons of noise to find error messages kthx
alias context='context --nostatistics'

# reduce likelihood of me ever accidentally typing `make -j` again
alias make='make -j4'
# disable X11 gui (never mind, this has been upgraded to ~/bin status)
# alias emacs='emacs -nw'

alias min='vim -u NONE'

alias biggest='du -s $(\ls -A) | sort -g | tail -n10'

# 1. Make a replacement for one of the most frequently used
#    unix commands in existence
# 2. Give it the most uncomfortable name possible to type
#    on an american keyboard
# 3. ???
# 4. Profit
#
# (this could hurt us; it's not strictly a drop-in)
if callable exa; then alias ls=exa; fi

# NOTE: swap has been upgraded to a script

# no more.
# please. no more.
if callable sane-cp; then alias cp=sane-cp; fi
if callable sane-mv; then alias mv=sane-mv; fi
if callable trash; then
	alias rm='echo >&2 "rm disabled, use can or /usr/bin/rm"; false'
	alias can=trash
	# why oh why is restore-trash interactive?! :/
	# 2018-02-13: It's now obvious to me that this is because multiple deleted
	#             files may have the same path.  That said, I can think of many
	#             ways to make the experience less of a chore. It's on github
	#             (https://github.com/andreafrancia/trash-cli), written in
	#             python, and very tempting to fork...
	# NOTE: name changed at some point
	callable restore-trash && alias uncan=restore-trash # old
	callable trash-restore && alias uncan=trash-restore # new
fi

# https://twitter.com/liamosaur/status/506975850596536320
alias fuck='sudo $(history -p \!\!)'
alias please='sudo $(history -p \!\!)'
alias fucking=sudo

# So it turns out that simply invoking `unity` -- without arguments! -- will
#  kill your entire session immediately and without question.
#
# The man page for unity seems to suggest that the default behavior used
#  to be far more reasonable:
#
#        --replace
#              Deprecated option for backwards compatibility.  Has no effect.
#
alias unity='echo >&2 "Disabled. (use /usr/bin/unity if you truly are a madman)"; false'

# I've gotten spoiled by reasonable people reasonably packing a single
# reasonable directory into a .tar file, and, as a result, I have on more
# than one occassion accidentally permitted a .zip file to unreasonably
# dump 500 files all over my lawn.
if callable unzip2dir; then
	alias unzip='echo >&2 "Disabled. (Use unzip2dir or /usr/bin/unzip)"; false'
fi

# CAPS WHY
if callable PCSX2 && ! callable pcsx2; then alias pcsx2=PCSX2; fi
# and i can't even spell it anyways
if callable pcsx2 && ! callable ps2; then alias ps2=pcsx2; fi

if callable pacdiff; then
	# pacdiff diffprog that downloads the old version and uses a threeway diff.
	# It's unsuitable for other usages of DIFFPROG, so we use an alias with env.
	alias pacdiff='DIFFPROG=_pacdiff-diffprog-ukhippo pacdiff'
fi

callable pacman && alias arch-orphans='pacman -Qtdq'

# Not done automatically on Arch.
# (seems "ls" is colorized even without having done this; but it does affect "tree")
[ "x$LS_COLORS" == x ] && callable dircolors && eval "$(dircolors --sh)"

# sudoedit uses this
export EDITOR=vim

# I don't think setting this in bashrc is a terrible idea.
# ...it isn't a terrible idea, right?!
export OMP_NUM_THREADS=4

# lammps-sys
export RUST_LAMMPS_MAKEFILE=$HOME/dotfiles/lammps-Makefile.omp

