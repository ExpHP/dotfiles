# vim: ft=sh

# This file is intended to be sourced by both .bashrc and .zshrc.
# It contains environment variables, aliases, and other shell-agnostic things.

# this might already be there, but it also might not.
# doesn't hurt to have it listed twice!
PATH=$HOME/bin:$PATH

# for my lame-ass script that I gave up on
export VASP_POTCAR_DIR="$HOME/asd/VASP DATA/potentials"

# for pymatgen, written by people who actually know what they're doing
export VASP_PSP_DIR="$HOME/asd/pymatgen_res"

# this incredibly-descriptively named variable is for phonon
export ISODATA=/usr/local/phon610/isobyu/

#----------------------------------------------

callable() {
	# NOTE: 'GNU which', as found on arch linux, writes to stderr on failure
	which "$@" 1>/dev/null 2>/dev/null
}

# phonopy
alias sym-pos="phonopy --sym -c POSCAR > symmetry"
alias sym-con="phonopy --sym -c CONTCAR > symmetry"

# Let sudo see things in our path.
alias sudo="sudo env PATH=\"\$PATH\""

# as if I'm ever going to use go again >_>
export GOPATH=$HOME/cpp/go

# Sometimes rustup adds this, sometimes it has other things on its mind
PATH=$HOME/.cargo/bin:$PATH

# binaries distributed inside haskell packages
export PATH=$PATH:$HOME/.cabal/bin
alias hoogle="hoogle --color --count=10"

# Newer ghc versions:
#   sudo add-apt-repository https://launchpad.net/~hvr/+archive/ubuntu/ghc
export PATH=/opt/ghc/bin:$PATH

alias cabal="cabal --require-sandbox"
alias cabal-deps="echo >&2 \"No longer necessary. Try:  cabal new-build
Failing that, the old def was:
   cabal --require-sandbox install --dependencies-only -pj\"; false"

# plz stop making me scroll through tons of noise to find error messages kthx
alias context="context --nostatistics"

# reduce likelihood of me ever accidentally typing `make -j` again
alias make='make -j4'
# disable X11 gui (never mind, this has been upgraded to ~/bin status)
alias emacs='emacs -nw'

alias min="vim -u NONE"

# NOTE: swap has been upgraded to a script

# no more.
# please. no more.
PATH=~/syncbin:$PATH
if callable sane-cp; then alias cp=sane-cp; fi
if callable sane-mv; then alias mv=sane-mv; fi
if callable trash; then
	alias rm='echo >&2 "rm disabled, use can or /usr/bin/rm"; false'
	alias can=trash
	# why oh why is restore-trash interactive?! :/
	alias uncan=restore-trash
fi

# https://twitter.com/liamosaur/status/506975850596536320
alias fuck='sudo $(history -p \!\!)'

# So it turns out that simply invoking `unity` -- without arguments! -- will
#  kill your entire session immediately and without question.
#
# The man page for unity seems to suggest that the default behavior used
#  to be far more reasonable:
#
#        --replace
#              Deprecated option for backwards compatibility.  Has no effect.
#
alias unity='echo >&2 "Disabled. (use /usr/bin/unity if you truly are a madman)"; false'

# I've gotten spoiled by reasonable people reasonably packing a single
# reasonable directory into a .tar file, and, as a result, I have on more
# than one occassion accidentally permitted a .zip file to unreasonably
# dump 500 files all over my lawn.
if callable unzip2dir; then
	alias unzip='echo >&2 "Disabled. (Use unzip2dir or /usr/bin/unzip)"; false'
fi

# cross compiler install location
# NOTE: don't get your hopes up, I've still yet to successfully make one that can
#  actually produce an executable.
export PATH=/opt/cross/bin:$PATH

# Binaries in this repo!
export PATH=$HOME/dotfiles/bin:$PATH

# Bumper rail.
# Limit memory for interactive bash prompts, because thrashing sucks.
# To bypass, invoke 'nolimit' from *outside* of a bash process.
if callable bc && [[ -z "$NOLIMIT_JUST_IN_TIME" ]]; then
	MAX_RAM_FRACTION=0.5
	TOTAL_RAM=$(free -kt | sed -n '2p' | awk '{ print $2 }')
	# (note: The purpose of "/ 1" here seems to be to floor the number)
	MAX_OK=$(echo "($MAX_RAM_FRACTION * $TOTAL_RAM) / 1" | bc)
	# just a sanity check. Maybe the output format of free changed... idunno,
	# and i don't care, because a silly and pointless check is better than never
	# being able to use a terminal again!
	if [[ $MAX_OK -ge 10000 ]]; then
		ulimit -v $MAX_OK
		export NOLIMIT_TOO_LATE=1
	fi
fi

