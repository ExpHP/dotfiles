#!/usr/bin/env sh
# vim: ft=sh

# path.include
# PATH modifications aren't something I want to limit to just interactive shell prompts.
# This file is suitable for linkage into $XDG_CONFIG_HOME/plasma-workspace/env/.

export PATH
export LIBRARY_PATH
export LD_LIBRARY_PATH
export C_INCLUDE_PATH

# this might already be there, but it also might not.
# doesn't hurt to have it listed twice!
PATH=$HOME/bin:$PATH

# Sometimes rustup adds this, sometimes it has other things on its mind
PATH=$HOME/.cargo/bin:$PATH

# ayup
PATH=$HOME/.local/bin:$PATH
LIBRARY_PATH=$HOME/.local/lib:$LIBRARY_PATH
LD_LIBRARY_PATH=$HOME/.local/lib:$LD_LIBRARY_PATH
C_INCLUDE_PATH=$HOME/.local/include:$C_INCLUDE_PATH

# binaries distributed inside haskell packages
# (FIXME: why is the one prepended while the rest are appended? accidental or deliberate?)
PATH=$PATH:$HOME/.cabal/bin

# FIXME uhh... what to do about the version number?
PATH=$HOME/.gem/ruby/2.4.0/bin/:$PATH

# Newer ghc versions:
#   sudo add-apt-repository https://launchpad.net/~hvr/+archive/ubuntu/ghc
PATH=/opt/ghc/bin:$PATH

# cross compiler install location
# NOTE: don't get your hopes up, I've still yet to successfully make one that can
#  actually produce an executable.
PATH=/opt/cross/bin:$PATH

# Binaries in this repo!
PATH=$HOME/dotfiles/bin:$PATH

# utility scripts for code that gets transferred to supercomputers.
PATH=$HOME/syncbin:$PATH

#----------------------------------------------

# ensure no empty components are in PATH-like vars,
# because POSIX defines these as equivalent to '.',
# because POSIX hates you.
__pathrc_strip_empty() { echo "$*" | sed -E -e 's/^:*//' -e 's/:*$//' -e 's/:+/:/g'; }
PATH=$(__pathrc_strip_empty "$PATH")
LIBRARY_PATH=$(__pathrc_strip_empty "$LIBRARY_PATH")
LD_LIBRARY_PATH=$(__pathrc_strip_empty "$LD_LIBRARY_PATH")
C_INCLUDE_PATH=$(__pathrc_strip_empty "$C_INCLUDE_PATH")
