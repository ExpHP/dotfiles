" This is maintained separately from vimrc.include
" because that file is a mess and I'm too lazy to figure
" out if it needs to be split up orderwise.
"
" It only has the most important things which ensure that
" I don't accidentally destroy files.

"""""""""""""""""""""""""
syntax on

let mapleader="\r"
let maplocalleader=","

set backspace=indent,eol,start

"""""""""""""""""""""""""
" Remove line limit for yanking between files by redefining viminfo without the '<' option          
set viminfo='100,s10,h

"""""""""""""""""""""""""
" Show partially-typed commands in status bar
set showcmd

" Always make status bar visible
set laststatus=2

"""""""""""""""""""""""""
" timeout is 'mapping timeout', ttimeout is 'terminal timeout'
" Make it so that key codes time out, but not key mappings (like <Leader>)
set ttimeout
set notimeout

" Make <Esc> time out very quickly (it's annoying to see it hang around with showcmd on)            
set ttimeoutlen=10  "milliseconds

"""""""""""""""""""""""""
" Make Y consistent with C, D.
nnoremap Y yg_

"""""""""""""""""""""""""
" Some footgun-elimination (taken from valloric's dotfiles)
 
" CTRL-U and CTRL-W in insert mode cannot be undone.  Use CTRL-G u to first
" break undo, so that we can undo those changes after inserting a line break.
" For more info, see: http://vim.wikia.com/wiki/Recover_from_accidental_Ctrl-U                      
inoremap <c-u> <c-g>u<c-u>
inoremap <c-w> <c-g>u<c-w>
 
" Using '<' and '>' in visual mode to shift code by a tab-width left/right by
" default exits visual mode. With this mapping we remain in visual mode after
" such an operation.
vnoremap < <gv
vnoremap > >gv


