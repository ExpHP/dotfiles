# Thankfully, thanks to shougo's own dein.toml files,
# there is no shortage of examples:
#
#   https://github.com/Shougo/shougo-s-github/blob/master/vim/rc/dein.toml
#   https://github.com/Shougo/shougo-s-github/blob/master/vim/rc/deinlazy.toml
#

# Prettiful status line.
[[plugins]]
repo = 'bling/vim-airline'

# rainbow-parentheses.vim on steroids.
# Colors not only the parentheses, but the commas, too.
[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = '''
	let g:rainbow_active = 1
	let tmp = {}
	let tmp['guifgs'] = ['royalblue', 'darkorange', 'seagreen', 'firebrick', 'darkorchid']
	let tmp['ctermfgs'] = [226,40,128,39,202]  " YGVBR
	let tmp['operators'] = '_,_'
	let tmp['parentheses'] = ['start=/(/ end=/)/']
	let tmp['separately'] = {'*': {}}
	let tmp['tex'] = {'parentheses': ['start=/{/ end=/}/', 'start=/\[/ end=/\]/']}
	let tmp['vim'] = {'parentheses': [
	\	'start=/(/ end=/)/', 'start=/\[/ end=/\]/', 'start=/{/ end=/}/ fold',
	\	'start=/(/ end=/)/ containedin=vimFuncBody',
	\	'start=/\[/ end=/\]/ containedin=vimFuncBody',
	\	'start=/{/ end=/}/ fold containedin=vimFuncBody',
	\	]}
	let g:rainbow_conf = tmp
	unlet tmp
'''

# I use this to permit SOME modelines (e.g. filetype)
#  while disabling most (e.g. indent)
[[plugins]]
repo = 'ciaranm/securemodelines'

# Marks added/modified/deleted lines since last commit.
[[plugins]]
repo = 'airblade/vim-gitgutter'

# for :T (an easier way to reuse a neovim terminal buffer for running
#   commands, since :! is kind of useless in neovim)
[[plugins]]
repo = 'kassio/neoterm'
if = "has('nvim')"

# provides :Scriptnames (a :scriptnames that writes to a type of buffer
#  that you can actually search)
[[plugins]]
repo = "tpope/vim-scriptease"

#-----------------
# Colors

# Vim's background=light colors adapted to a dark background.
[[plugins]]
if = "!has('nvim')"
repo = "ExpHP/brighter.vim"

# Neovim's default colors are hideous.
[[plugins]]
if = "has('nvim')"
repo = 'ExpHP/oceanic-next'
rev = 'darker'

#-----------------
# language stuff

[[plugins]]
repo = 'scrooloose/syntastic'
hook_add = '''
	" From the syntastic docs...?  I believe this causes the status line to display the error
	"  message when the cursor is on a line with an error.
	set statusline+=%#warningmsg#
	set statusline+=%{SyntasticStatuslineFlag()}
	set statusline+=%*
'''

[[plugins]]
repo = 'vim-scripts/vim-json-bundle'
lazy = 1
on_ft = 'json'

[[plugins]]
repo = 'derekwyatt/vim-scala'
lazy = 1
on_ft = 'scala'

[[plugins]]
repo = 'fatih/vim-go'
lazy = 1
on_ft = 'go'

[[plugins]]
repo = 'cespare/vim-toml'
lazy = 1
on_ft = 'toml'

[[plugins]]
repo = 'neovimhaskell/haskell-vim'
lazy = 1
on_ft = 'haskell'

[[plugins]]
repo = 'rust-lang/rust.vim'
lazy = 1
on_ft = 'rust'

[[plugins]]
repo = 'kovisoft/slimv'
lazy = 1  # TAKE THAT, PAREDIT.VIM AND YOUR SMELLY "filetype indent on"!!
on_ft = ['lisp', 'clojure', 'scheme']

#-------------------------------------
# Python plugins:

# FIXME: Before python plugins can be used on nvim you must
#  `pip install neovim` and `pip3 install neovim`,
#  but I'm not sure how to prevent loading the plugins without them.

# Unfortunately the following explodes in neovim... apparently because
#  "has('python')" and "has('python3')" do something in neovim that is
#  not permitted inside a sandbox (which dein uses when it evals the "if").
#if = """
#  (( has('nvim')) &&
# \    (has('python') && has('python3')) ) ||
# \((!has('nvim')) &&
# \    (has('python') || has('python3')) )"""
#  "

[[plugins]]
repo = 'klen/python-mode'
lazy = 1
on_ft = 'python'

[[plugins]]
repo = 'nvie/vim-flake8'
lazy = 1
on_ft = 'python'
